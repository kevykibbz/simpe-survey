# Generated by Django 4.1 on 2023-11-13 05:21

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import onboard.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=20)),
                ('required', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'questions',
                'db_table': 'question',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='QuestionResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('email_address', models.EmailField(max_length=254)),
                ('description', models.TextField()),
                ('gender', models.CharField(blank=True, choices=[], max_length=20)),
                ('programming_stack', models.CharField(max_length=255)),
                ('date_responded', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
            ],
            options={
                'verbose_name_plural': 'question_responses',
                'db_table': 'question_response',
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=20)),
                ('value', models.CharField(max_length=20)),
                ('text', models.CharField(max_length=255)),
                ('multiple', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='onboard.question')),
            ],
            options={
                'verbose_name_plural': 'options',
                'db_table': 'option',
            },
        ),
        migrations.CreateModel(
            name='FileProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('format', models.CharField(max_length=10, validators=[onboard.models.validate_file_format])),
                ('max_file_size', models.CharField(max_length=10)),
                ('max_file_size_unit', models.CharField(max_length=2, validators=[onboard.models.validate_file_size_unit])),
                ('multiple', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_properties', to='onboard.question')),
            ],
            options={
                'verbose_name_plural': 'file_properties',
                'db_table': 'file_property',
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('certificate', models.FileField(upload_to='certificates/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificates', to='onboard.questionresponse')),
            ],
            options={
                'verbose_name_plural': 'certificates',
                'db_table': 'certificates',
            },
        ),
    ]
